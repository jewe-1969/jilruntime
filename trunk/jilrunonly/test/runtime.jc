/*
 *  Test built-in type "runtime"
 */

import runtime;
import stdlib;

using runtime, stdlib;

class MyException : global::exception
{
    method MyException()                { _e = typeof(this); _m = ""; }
    method MyException(int e)           { _e = e; _m = ""; }
    method MyException(const string m)  { _e = typeof(this); _m = m; }
    method int getError()               { return _e; }
    method string getMessage()          { return _m; }
    int _e;
    string _m;
}

function string main(const string[] args)
{
    int e = getTypeID("MyException");
    int t = getTypeID("table");

    print("Testing built-in 'runtime' class:\n\n");
    printf("JewelScript libary version:    %s\n", libraryVersion());
    printf("JewelScript runtime version:   %s\n", runtimeVersion());
    printf("JewelScript compiler version:  %s\n", compilerVersion());
    printf("JewelScript type interface:    %s\n", typeInterfaceVersion());
    print("\n");
    printf("Is DEBUG build:                %s\n", debugBuild() ? "YES" : "NO");
    printf("Is RELEASE build:              %s\n", releaseBuild() ? "YES" : "NO");
    printf("Supports TRACE exception:      %s\n", traceException() ? "YES" : "NO");
    printf("Extended runtime checks:       %s\n", runtimeChecks() ? "YES" : "NO");
    print("\n");
    printf("Stack-size used:               %d\n", stackSize());
    printf("Current instruction counter:   %d\n", instructionCounter());
    print("\n");
    printf("Get type name of '%d':         %s\n", {e, getTypeName(e)});
    printf("Get type family of '%d':       %d\n", {e, getTypeFamily(e)});
    printf("Get base type of '%d':         %s\n", {e, getTypeName(getBaseType(e))});
    printf("Get type ID of 'table':        %d\n", t);
    printf("Is 'table' native type?        %s\n", isTypeNative(t) ? "YES" : "NO");
    printf("Get 'table' version            %s\n", getTypeVersion(t));
    printf("Get 'table' author             %s\n", getTypeAuthor(t));
    printf("Get 'table' description:       %s\n", getTypeDescription(t));
    printf("Get 'table' build timestamp:   %s\n", getTypeTimeStamp(t));
    printf("Get number of types:           %d\n", getNumTypes());
    print("\n");
    printf("Instruction counter now at:    %d\n", instructionCounter());
    print("\n");
    return null;
}
